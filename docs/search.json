[{"path":"/articles/example_analysis.html","id":"goal","dir":"Articles","previous_headings":"","what":"Goal","title":"Example Analysis","text":"question ’m hoping answer : factors associated high graded coffee beans? data comes TidyTuesday (2020-07-07) data dictionary located .","code":""},{"path":"/articles/example_analysis.html","id":"coffee-rating-and-flavor-grade","dir":"Articles","previous_headings":"","what":"Coffee Rating and Flavor Grade","title":"Example Analysis","text":"First look coffee ratings relates flavor grade color bean.  blue-ish green uncolored beans generally linear increase bean rating flavor grade increases, blue-green beans seem increase drastically rating around flavor grade 6.5-7 (10), green beans seem dip overall rating around flavor grade 6 7.","code":"coffee_flv_bal <- coffee %>%   distinct() %>%   select(total_cup_points, flavor, balance, color) %>%   filter(balance > 5.0) %>%   drop_na() %>%   group_by(flavor, color) %>%   summarise(rating_means = mean(total_cup_points)) ## `summarise()` has grouped output by 'flavor'. You can override using the ## `.groups` argument. ggplot(coffee_flv_bal, aes(x = flavor, y = rating_means)) +   facet_wrap(vars(color)) +   geom_point() +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(size=0.5) +   labs(x = \"Flavor Grade\",        y = \"Overall Rating\",        title = \"Coffee Ratings by Flavor Ratings\",        subtitle = \"By Color of Bean\") ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. ## `geom_smooth()` using method = 'loess' and formula = 'y ~ x' ## Warning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` in the `default_aes` field and elsewhere instead."},{"path":"/articles/example_analysis.html","id":"coffee-rating-on-certification-bodies","dir":"Articles","previous_headings":"","what":"Coffee Rating on Certification Bodies","title":"Example Analysis","text":"Next look coffee ratings based certification bodies. Generally, doesn’t seem certification body affects coffee bean’s rating much. METAD Agricultural Development plc seems rate coffee beans highest average, Instuto Hondereno del Cafe seems rate coffee bean’s lowest average (abbreviations used sake space).","code":"coffee_cert_rate <- coffee %>%   select(total_cup_points, certification_body) %>%   group_by(certification_body) %>%   summarise(rating_means = mean(total_cup_points))  coffee_cert_rate$percent <- as.double(map(coffee_cert_rate$rating_means, function(x) x/100))    ggplot(coffee_cert_rate, aes(y = reorder(certification_body, percent), x = percent)) +   geom_lollipop(horizontal = TRUE) +   theme(axis.text.y = element_text(size=5, angle=30)) +   scale_y_discrete(label = abbreviate) +   labs(x = \"Percent Coffee Rating\",        y = \"Cerficiation Body\",        title = \"Coffee Ratings by Certification Bodies\",        subtitle = \"A Lollipop Chart\") ## Warning: Using the `size` aesthietic with geom_segment was deprecated in ggplot2 3.4.0. ## ℹ Please use the `linewidth` aesthetic instead. ## Warning in labels(...): abbreviate used with non-ASCII chars"},{"path":"/articles/example_analysis.html","id":"coffee-rating-and-defects","dir":"Articles","previous_headings":"","what":"Coffee Rating and Defects","title":"Example Analysis","text":"Finally, look rating based number defects. seems generally, defects bean lower rating, expected.","code":"defects <- coffee %>%   select(category_one_defects, category_two_defects) %>%   drop_na()  defect_total <- pmap_dbl(defects, .f = sum)  defects$dfct_tot <- defect_total  coffee_dfct <- data.frame(defects, coffee$total_cup_points)  ggplot(coffee_dfct, aes(x = dfct_tot, y = coffee.total_cup_points)) +    geom_point() +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   labs(x = \"Total Defects\",        y = \"Overall Rating\",        title = \"Coffee Rating by Total Defects\",        subtitle = \"Including Primary and Secondary Defects\") ## `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'"},{"path":[]},{"path":"/articles/example_analysis.html","id":"tidyr","dir":"Articles","previous_headings":"Functions Used","what":"tidyr","title":"Example Analysis","text":"select() drop_na()","code":""},{"path":"/articles/example_analysis.html","id":"dplyr","dir":"Articles","previous_headings":"Functions Used","what":"dplyr","title":"Example Analysis","text":"distinct() filter() group_by() summarise()","code":""},{"path":"/articles/example_analysis.html","id":"purr","dir":"Articles","previous_headings":"Functions Used","what":"purr","title":"Example Analysis","text":"map() pmap_dbl()","code":""},{"path":"/articles/example_analysis.html","id":"ggplot2","dir":"Articles","previous_headings":"Functions Used","what":"ggplot2","title":"Example Analysis","text":"geom_point() geom_smooth()","code":""},{"path":"/articles/example_analysis.html","id":"ggalt","dir":"Articles","previous_headings":"Functions Used","what":"ggalt","title":"Example Analysis","text":"geom_xspline() geom_lollipop()","code":""},{"path":"/articles/ggalt_examples.html","id":"splines","dir":"Articles","previous_headings":"","what":"Splines!","title":"ggalt examples","text":"","code":"ggplot(dat, aes(x, y, group=group, color=group)) +   geom_point() +   geom_line() ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point() +   geom_line() +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. ## `geom_smooth()` using method = 'loess' and formula = 'y ~ x' ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(size=0.5) ## `geom_smooth()` using method = 'loess' and formula = 'y ~ x' ## Warning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` in the `default_aes` field and elsewhere instead. ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=-0.4, size=0.5) ## `geom_smooth()` using method = 'loess' and formula = 'y ~ x' ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=0.4, size=0.5) ## `geom_smooth()` using method = 'loess' and formula = 'y ~ x' ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=1, size=0.5) ## `geom_smooth()` using method = 'loess' and formula = 'y ~ x' ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=0, size=0.5) ## `geom_smooth()` using method = 'loess' and formula = 'y ~ x' ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=-1, size=0.5) ## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"/articles/ggalt_examples.html","id":"alternate-better-density-plots","dir":"Articles","previous_headings":"Splines!","what":"Alternate (better) density plots","title":"ggalt examples","text":"","code":"# bkde  data(geyser, package=\"MASS\")  ggplot(geyser, aes(x=duration)) +    stat_bkde(alpha=1/2) ## Bandwidth not specified. Using '0.14', via KernSmooth::dpik. ggplot(geyser, aes(x=duration)) +   geom_bkde(alpha=1/2) ## Bandwidth not specified. Using '0.14', via KernSmooth::dpik. ggplot(geyser, aes(x=duration)) +    stat_bkde(bandwidth=0.25) ggplot(geyser, aes(x=duration)) +   geom_bkde(bandwidth=0.25) set.seed(1492) dat <- data.frame(cond = factor(rep(c(\"A\",\"B\"), each=200)),                     rating = c(rnorm(200),rnorm(200, mean=.8)))  ggplot(dat, aes(x=rating, color=cond)) + geom_bkde(fill=\"#00000000\") ## Bandwidth not specified. Using '0.36', via KernSmooth::dpik. ## Bandwidth not specified. Using '0.31', via KernSmooth::dpik. ggplot(dat, aes(x=rating, fill=cond)) + geom_bkde(alpha=0.3) ## Bandwidth not specified. Using '0.36', via KernSmooth::dpik. ## Bandwidth not specified. Using '0.31', via KernSmooth::dpik. # ash  set.seed(1492) dat <- data.frame(x=rnorm(100)) grid.arrange(ggplot(dat, aes(x)) + stat_ash(),              ggplot(dat, aes(x)) + stat_bkde(),              ggplot(dat, aes(x)) + stat_density(),              nrow=3) ## Estimate nonzero outside interval ab. ## Bandwidth not specified. Using '0.43', via KernSmooth::dpik. cols <- RColorBrewer::brewer.pal(3, \"Dark2\") ggplot(dat, aes(x)) +    stat_ash(alpha=1/3, fill=cols[3]) +    stat_bkde(alpha=1/3, fill=cols[2]) +    stat_density(alpha=1/3, fill=cols[1]) +    geom_rug() +   labs(x=NULL, y=\"density/estimate\") +   scale_x_continuous(expand=c(0,0)) +   theme_bw() +   theme(panel.grid=element_blank()) +   theme(panel.border=element_blank()) ## Estimate nonzero outside interval ab. ## Bandwidth not specified. Using '0.43', via KernSmooth::dpik."},{"path":"/articles/ggalt_examples.html","id":"alternate-2d-density-plots","dir":"Articles","previous_headings":"","what":"Alternate 2D density plots","title":"ggalt examples","text":"","code":"m <- ggplot(faithful, aes(x = eruptions, y = waiting)) +        geom_point() +        xlim(0.5, 6) +        ylim(40, 110)  m + geom_bkde2d(bandwidth=c(0.5, 4)) ## Warning: Computation failed in `stat_bkde2d()` ## Caused by error in `contour_breaks()`: ## ! argument \"z.range\" is missing, with no default m + stat_bkde2d(bandwidth=c(0.5, 4), aes(fill = ..level..), geom = \"polygon\") ## Warning: The dot-dot notation (`..level..`) was deprecated in ggplot2 3.4.0. ## ℹ Please use `after_stat(level)` instead. ## Computation failed in `stat_bkde2d()`"},{"path":"/articles/ggalt_examples.html","id":"propublica-stateface","dir":"Articles","previous_headings":"","what":"ProPublica StateFace","title":"ggalt examples","text":"","code":"# Run show_stateface() to see the location of the TTF StateFace font # You need to install it for it to work  set.seed(1492) dat <- data.frame(state=state.abb,                   x=sample(100, 50),                   y=sample(100, 50),                   col=sample(c(\"#b2182b\", \"#2166ac\"), 50, replace=TRUE),                   sz=sample(6:15, 50, replace=TRUE),                   stringsAsFactors=FALSE) gg <- ggplot(dat, aes(x=x, y=y)) gg <- gg + geom_stateface(aes(label=state, color=col, size=sz)) gg <- gg + scale_color_identity() gg <- gg + scale_size_identity() gg"},{"path":"/articles/ggalt_examples.html","id":"encircling-points-automagically","dir":"Articles","previous_headings":"","what":"Encircling points automagically","title":"ggalt examples","text":"","code":"d <- data.frame(x=c(1,1,2),y=c(1,2,2)*100)  gg <- ggplot(d,aes(x,y)) gg <- gg + scale_x_continuous(expand=c(0.5,1)) gg <- gg + scale_y_continuous(expand=c(0.5,1))  gg + geom_encircle(s_shape=1, expand=0) + geom_point() gg + geom_encircle(s_shape=1, expand=0.1, colour=\"red\") + geom_point() gg + geom_encircle(s_shape=0.5, expand=0.1, colour=\"purple\") + geom_point() gg + geom_encircle(data=subset(d, x==1), colour=\"blue\", spread=0.02) +   geom_point() gg +geom_encircle(data=subset(d, x==2), colour=\"cyan\", spread=0.04) +    geom_point() gg <- ggplot(mpg, aes(displ, hwy)) gg + geom_encircle(data=subset(mpg, hwy>40)) + geom_point() ss <- subset(mpg,hwy>31 & displ<2)  gg + geom_encircle(data=ss, colour=\"blue\", s_shape=0.9, expand=0.07) +   geom_point() + geom_point(data=ss, colour=\"blue\")"},{"path":"/articles/ggalt_examples.html","id":"step-ribbons","dir":"Articles","previous_headings":"","what":"Step ribbons","title":"ggalt examples","text":"","code":"x <- 1:10 df <- data.frame(x=x, y=x+10, ymin=x+7, ymax=x+12)  gg <- ggplot(df, aes(x, y)) gg <- gg + geom_ribbon(aes(ymin=ymin, ymax=ymax),                       stat=\"stepribbon\", fill=\"#b2b2b2\") gg <- gg + geom_step(color=\"#2b2b2b\") gg gg <- ggplot(df, aes(x, y)) gg <- gg + geom_ribbon(aes(ymin=ymin, ymax=ymax),                       stat=\"stepribbon\", fill=\"#b2b2b2\",                       direction=\"vh\") gg <- gg + geom_step(color=\"#2b2b2b\") gg"},{"path":"/articles/ggalt_examples.html","id":"lollipop-charts","dir":"Articles","previous_headings":"","what":"Lollipop charts","title":"ggalt examples","text":"","code":"df <- read.csv(text=\"category,pct Other,0.09 South Asian/South Asian Americans,0.12 Interngenerational/Generational,0.21 S Asian/Asian Americans,0.25 Muslim Observance,0.29 Africa/Pan Africa/African Americans,0.34 Gender Equity,0.34 Disability Advocacy,0.49 European/European Americans,0.52 Veteran,0.54 Pacific Islander/Pacific Islander Americans,0.59 Non-Traditional Students,0.61 Religious Equity,0.64 Caribbean/Caribbean Americans,0.67 Latino/Latina,0.69 Middle Eastern Heritages and Traditions,0.73 Trans-racial Adoptee/Parent,0.76 LBGTQ/Ally,0.79 Mixed Race,0.80 Jewish Heritage/Observance,0.85 International Students,0.87\", stringsAsFactors=FALSE, sep=\",\", header=TRUE)  gg <- ggplot(df, aes(y=reorder(category, pct), x=pct)) gg <- gg + geom_lollipop(point.colour=\"steelblue\", point.size=2, horizontal=TRUE) gg <- gg + scale_x_continuous(expand=c(0,0), labels=percent,                               breaks=seq(0, 1, by=0.2), limits=c(0, 1)) gg <- gg + labs(x=NULL, y=NULL,                  title=\"SUNY Cortland Multicultural Alumni survey results\",                 subtitle=\"Ranked by race, ethnicity, home land and orientation\\namong the top areas of concern\",                 caption=\"Data from http://stephanieevergreen.com/lollipop/\") gg <- gg + theme_minimal() gg <- gg + theme(panel.grid.major.y=element_blank()) gg <- gg + theme(panel.grid.minor=element_blank()) gg <- gg + theme(axis.line.y=element_line(color=\"#2b2b2b\", size=0.15)) ## Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0. ## ℹ Please use the `linewidth` argument instead. gg <- gg + theme(axis.text.y=element_text(margin=margin(r=0, l=0))) gg <- gg + theme(plot.margin=unit(rep(30, 4), \"pt\")) gg <- gg + theme(plot.title=element_text(face=\"bold\")) gg <- gg + theme(plot.subtitle=element_text(margin=margin(b=10))) gg <- gg + theme(plot.caption=element_text(size=8, margin=margin(t=10))) gg ## Warning: Using the `size` aesthietic with geom_segment was deprecated in ggplot2 3.4.0. ## ℹ Please use the `linewidth` aesthetic instead."},{"path":"/articles/ggalt_examples.html","id":"dumbbell-charts","dir":"Articles","previous_headings":"","what":"Dumbbell charts","title":"ggalt examples","text":"optional vertical dodging","code":"df <- data.frame(trt=LETTERS[1:5], l=c(20, 40, 10, 30, 50), r=c(70, 50, 30, 60, 80))  ggplot(df, aes(y=trt, x=l, xend=r)) +    geom_dumbbell(size=3, color=\"#e3e2e1\",                  colour_x = \"#5b8124\", colour_xend = \"#bad744\",                 dot_guide=TRUE, dot_guide_size=0.25) +   labs(x=NULL, y=NULL, title=\"ggplot2 geom_dumbbell with dot guide\") +   theme_minimal() +   theme(panel.grid.major.x=element_line(size=0.05)) +   theme(panel.grid.major.y=element_blank()) df2 <- data.frame(trt = c(LETTERS[1:5], \"D\"),                   l = c(20, 40, 10, 30, 50, 40),                   r = c(70, 50, 30, 60, 80, 70))  ggplot(df2, aes(y=trt, x=l, xend=r)) +   geom_dumbbell(size=3, color=\"#e3e2e1\",                 colour_x = \"#5b8124\", colour_xend = \"#bad744\",                 dot_guide=TRUE, dot_guide_size=0.25,                 position=position_dodgev(height=0.8)) +   labs(x=NULL, y=NULL, title=\"ggplot2 geom_dumbbell with dot guide\") +   theme_minimal() +   theme(panel.grid.major.x=element_line(size=0.05))"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bob Rudis. Author, maintainer. Ben Bolker. Author, contributor.            Encircling & additional splines Ben Marwick. Contributor.            General codebase cleanup Jan Schulz. Author, contributor.            Annotations Rosen Matev. Contributor.            Original annotate_textp implementation stackoverflow ProPublica. Data contributor.            StateFace font Aditya Kothari. Author, contributor.            Core functionality horizon plots Ather. Data contributor.            Core functionality horizon plots Jonathan Sidi. Author, contributor.            Annotation ticks Tarcisio Fedrizzi. Contributor.            Bytes formatter","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rudis B, Bolker B, Schulz J, Kothari , Sidi J (2022). ggalt: Extra Coordinate Systems, 'Geoms', Statistical Transformations, Scales Fonts 'ggplot2'. R package version 0.6.2, https://github.com/hrbrmstr/ggalt.","code":"@Manual{,   title = {ggalt: Extra Coordinate Systems, 'Geoms', Statistical Transformations, Scales and Fonts for 'ggplot2'},   author = {Bob Rudis and Ben Bolker and Jan Schulz and Aditya Kothari and Jonathan Sidi},   year = {2022},   note = {R package version 0.6.2},   url = {https://github.com/hrbrmstr/ggalt}, }"},{"path":"/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"","code":"# you'll want to see the vignettes, trust me install.packages(\"ggplot2\") install.packages(\"ggalt\") # OR: devtools::install_github(\"hrbrmstr/ggalt\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"","code":"library(ggplot2) library(gridExtra) library(ggalt)  # current verison packageVersion(\"ggalt\") ## [1] '0.6.1'  set.seed(1492) dat <- data.frame(x=c(1:10, 1:10, 1:10),                   y=c(sample(15:30, 10), 2*sample(15:30, 10), 3*sample(15:30, 10)),                   group=factor(c(rep(1, 10), rep(2, 10), rep(3, 10))) )"},{"path":"/index.html","id":"horzon-chart","dir":"","previous_headings":"","what":"Horzon Chart","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"Example carved : https://github.com/halhen/viz-pub/blob/master/sports-time--day/2_gen_chart.R","code":"library(hrbrthemes) library(ggalt) library(tidyverse)  sports <- read_tsv(\"https://github.com/halhen/viz-pub/raw/master/sports-time-of-day/activity.tsv\")  sports %>%   group_by(activity) %>%    filter(max(p) > 3e-04,           !grepl('n\\\\.e\\\\.c', activity)) %>%    arrange(time) %>%   mutate(p_peak = p / max(p),           p_smooth = (lag(p_peak) + p_peak + lead(p_peak)) / 3,          p_smooth = coalesce(p_smooth, p_peak)) %>%    ungroup() %>%   do({      rbind(.,           filter(., time == 0) %>%             mutate(time = 24*60))   }) %>%   mutate(time = ifelse(time < 3 * 60, time + 24 * 60, time)) %>%   mutate(activity = reorder(activity, p_peak, FUN=which.max)) %>%    arrange(activity) %>%   mutate(activity.f = reorder(as.character(activity), desc(activity))) -> sports  sports <- mutate(sports, time2 = time/60)  ggplot(sports, aes(time2, p_smooth)) +   geom_horizon(bandwidth=0.1) +   facet_grid(activity.f~.) +   scale_x_continuous(expand=c(0,0), breaks=seq(from = 3, to = 27, by = 3), labels = function(x) {sprintf(\"%02d:00\", as.integer(x %% 24))}) +   viridis::scale_fill_viridis(name = \"Activity relative to peak\", discrete=TRUE,                               labels=scales::percent(seq(0, 1, 0.1)+0.1)) +   labs(x=NULL, y=NULL, title=\"Peak time of day for sports and leisure\",        subtitle=\"Number of participants throughout the day compared to peak popularity.\\nNote the morning-and-evening everyday workouts, the midday hobbies,\\nand the evenings/late nights out.\") +   theme_ipsum_rc(grid=\"\") +   theme(panel.spacing.y=unit(-0.05, \"lines\")) +   theme(strip.text.y = element_text(hjust=0, angle=360)) +   theme(axis.text.y=element_blank())"},{"path":"/index.html","id":"splines","dir":"","previous_headings":"","what":"Splines!","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"","code":"ggplot(dat, aes(x, y, group=group, color=group)) +   geom_point() +   geom_line() ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point() +   geom_line() +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) ## `geom_smooth()` using method = 'loess' and formula 'y ~ x' ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(size=0.5) ## `geom_smooth()` using method = 'loess' and formula 'y ~ x' ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=-0.4, size=0.5) ## `geom_smooth()` using method = 'loess' and formula 'y ~ x' ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=0.4, size=0.5) ## `geom_smooth()` using method = 'loess' and formula 'y ~ x' ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=1, size=0.5) ## `geom_smooth()` using method = 'loess' and formula 'y ~ x' ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=0, size=0.5) ## `geom_smooth()` using method = 'loess' and formula 'y ~ x' ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=-1, size=0.5) ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'"},{"path":"/index.html","id":"alternate-better-density-plots","dir":"","previous_headings":"Splines!","what":"Alternate (better) density plots","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"","code":"# bkde  data(geyser, package=\"MASS\")  ggplot(geyser, aes(x=duration)) +    stat_bkde(alpha=1/2) ## Bandwidth not specified. Using '0.14', via KernSmooth::dpik. ggplot(geyser, aes(x=duration)) +   geom_bkde(alpha=1/2) ## Bandwidth not specified. Using '0.14', via KernSmooth::dpik. ggplot(geyser, aes(x=duration)) +    stat_bkde(bandwidth=0.25) ggplot(geyser, aes(x=duration)) +   geom_bkde(bandwidth=0.25) set.seed(1492) dat <- data.frame(cond = factor(rep(c(\"A\",\"B\"), each=200)),                     rating = c(rnorm(200),rnorm(200, mean=.8)))  ggplot(dat, aes(x=rating, color=cond)) + geom_bkde(fill=\"#00000000\") ## Bandwidth not specified. Using '0.36', via KernSmooth::dpik. ## Bandwidth not specified. Using '0.31', via KernSmooth::dpik. ggplot(dat, aes(x=rating, fill=cond)) + geom_bkde(alpha=0.3) ## Bandwidth not specified. Using '0.36', via KernSmooth::dpik. ## Bandwidth not specified. Using '0.31', via KernSmooth::dpik. # ash  set.seed(1492) dat <- data.frame(x=rnorm(100)) grid.arrange(ggplot(dat, aes(x)) + stat_ash(),              ggplot(dat, aes(x)) + stat_bkde(),              ggplot(dat, aes(x)) + stat_density(),              nrow=3) ## Estimate nonzero outside interval ab. ## Bandwidth not specified. Using '0.43', via KernSmooth::dpik. cols <- RColorBrewer::brewer.pal(3, \"Dark2\") ggplot(dat, aes(x)) +    stat_ash(alpha=1/3, fill=cols[3]) +    stat_bkde(alpha=1/3, fill=cols[2]) +    stat_density(alpha=1/3, fill=cols[1]) +    geom_rug() +   labs(x=NULL, y=\"density/estimate\") +   scale_x_continuous(expand=c(0,0)) +   theme_bw() +   theme(panel.grid=element_blank()) +   theme(panel.border=element_blank()) ## Estimate nonzero outside interval ab. ## Bandwidth not specified. Using '0.43', via KernSmooth::dpik."},{"path":"/index.html","id":"alternate-2d-density-plots","dir":"","previous_headings":"","what":"Alternate 2D density plots","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"","code":"m <- ggplot(faithful, aes(x = eruptions, y = waiting)) +        geom_point() +        xlim(0.5, 6) +        ylim(40, 110)  m + geom_bkde2d(bandwidth=c(0.5, 4)) m + stat_bkde2d(bandwidth=c(0.5, 4), aes(fill = ..level..), geom = \"polygon\")"},{"path":"/index.html","id":"coord_proj-lives-still-needs-a-teensy-bit-of-work","dir":"","previous_headings":"","what":"coord_proj LIVES! (still needs a teensy bit of work)","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"","code":"world <- map_data(\"world\") ##  ## Attaching package: 'maps' ## The following object is masked from 'package:purrr': ##  ##     map world <- world[world$region != \"Antarctica\",]  gg <- ggplot() gg <- gg + geom_cartogram(data=world, map=world,                     aes(x=long, y=lat, map_id=region)) gg <- gg + coord_proj(\"+proj=wintri\") gg"},{"path":"/index.html","id":"propublica-stateface","dir":"","previous_headings":"","what":"ProPublica StateFace","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"","code":"# Run show_stateface() to see the location of the TTF StateFace font # You need to install it for it to work  set.seed(1492) dat <- data.frame(state=state.abb,                   x=sample(100, 50),                   y=sample(100, 50),                   col=sample(c(\"#b2182b\", \"#2166ac\"), 50, replace=TRUE),                   sz=sample(6:15, 50, replace=TRUE),                   stringsAsFactors=FALSE) gg <- ggplot(dat, aes(x=x, y=y)) gg <- gg + geom_stateface(aes(label=state, color=col, size=sz)) gg <- gg + scale_color_identity() gg <- gg + scale_size_identity() gg"},{"path":"/index.html","id":"encircling-points-automagically","dir":"","previous_headings":"","what":"Encircling points automagically","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"","code":"d <- data.frame(x=c(1,1,2),y=c(1,2,2)*100)  gg <- ggplot(d,aes(x,y)) gg <- gg + scale_x_continuous(expand=c(0.5,1)) gg <- gg + scale_y_continuous(expand=c(0.5,1))  gg + geom_encircle(s_shape=1, expand=0) + geom_point() gg + geom_encircle(s_shape=1, expand=0.1, colour=\"red\") + geom_point() gg + geom_encircle(s_shape=0.5, expand=0.1, colour=\"purple\") + geom_point() gg + geom_encircle(data=subset(d, x==1), colour=\"blue\", spread=0.02) +   geom_point() gg +geom_encircle(data=subset(d, x==2), colour=\"cyan\", spread=0.04) +    geom_point() gg <- ggplot(mpg, aes(displ, hwy)) gg + geom_encircle(data=subset(mpg, hwy>40)) + geom_point() ss <- subset(mpg,hwy>31 & displ<2)  gg + geom_encircle(data=ss, colour=\"blue\", s_shape=0.9, expand=0.07) +   geom_point() + geom_point(data=ss, colour=\"blue\")"},{"path":"/index.html","id":"step-ribbons","dir":"","previous_headings":"","what":"Step ribbons","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"","code":"x <- 1:10 df <- data.frame(x=x, y=x+10, ymin=x+7, ymax=x+12)  gg <- ggplot(df, aes(x, y)) gg <- gg + geom_ribbon(aes(ymin=ymin, ymax=ymax),                       stat=\"stepribbon\", fill=\"#b2b2b2\") gg <- gg + geom_step(color=\"#2b2b2b\") gg gg <- ggplot(df, aes(x, y)) gg <- gg + geom_ribbon(aes(ymin=ymin, ymax=ymax),                       stat=\"stepribbon\", fill=\"#b2b2b2\",                       direction=\"vh\") gg <- gg + geom_step(color=\"#2b2b2b\") gg"},{"path":"/index.html","id":"lollipop-charts","dir":"","previous_headings":"","what":"Lollipop charts","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"","code":"df <- read.csv(text=\"category,pct Other,0.09 South Asian/South Asian Americans,0.12 Interngenerational/Generational,0.21 S Asian/Asian Americans,0.25 Muslim Observance,0.29 Africa/Pan Africa/African Americans,0.34 Gender Equity,0.34 Disability Advocacy,0.49 European/European Americans,0.52 Veteran,0.54 Pacific Islander/Pacific Islander Americans,0.59 Non-Traditional Students,0.61 Religious Equity,0.64 Caribbean/Caribbean Americans,0.67 Latino/Latina,0.69 Middle Eastern Heritages and Traditions,0.73 Trans-racial Adoptee/Parent,0.76 LBGTQ/Ally,0.79 Mixed Race,0.80 Jewish Heritage/Observance,0.85 International Students,0.87\", stringsAsFactors=FALSE, sep=\",\", header=TRUE)   library(ggplot2) library(ggalt) library(scales) ##  ## Attaching package: 'scales' ## The following object is masked from 'package:purrr': ##  ##     discard ## The following object is masked from 'package:readr': ##  ##     col_factor   gg <- ggplot(df, aes(y=reorder(category, pct), x=pct)) gg <- gg + geom_lollipop(point.colour=\"steelblue\", point.size=2, horizontal=TRUE) gg <- gg + scale_x_continuous(expand=c(0,0), labels=percent,                               breaks=seq(0, 1, by=0.2), limits=c(0, 1)) gg <- gg + labs(x=NULL, y=NULL,                  title=\"SUNY Cortland Multicultural Alumni survey results\",                 subtitle=\"Ranked by race, ethnicity, home land and orientation\\namong the top areas of concern\",                 caption=\"Data from http://stephanieevergreen.com/lollipop/\") gg <- gg + theme_minimal(base_family=\"Arial Narrow\") gg <- gg + theme(panel.grid.major.y=element_blank()) gg <- gg + theme(panel.grid.minor=element_blank()) gg <- gg + theme(axis.line.y=element_line(color=\"#2b2b2b\", size=0.15)) gg <- gg + theme(axis.text.y=element_text(margin=margin(r=0, l=0))) gg <- gg + theme(plot.margin=unit(rep(30, 4), \"pt\")) gg <- gg + theme(plot.title=element_text(face=\"bold\")) gg <- gg + theme(plot.subtitle=element_text(margin=margin(b=10))) gg <- gg + theme(plot.caption=element_text(size=8, margin=margin(t=10))) gg library(dplyr) library(tidyr) library(scales) library(ggplot2) library(ggalt) # devtools::install_github(\"hrbrmstr/ggalt\")  health <- read.csv(\"https://rud.is/dl/zhealth.csv\", stringsAsFactors=FALSE,                     header=FALSE, col.names=c(\"pct\", \"area_id\"))  areas <- read.csv(\"https://rud.is/dl/zarea_trans.csv\", stringsAsFactors=FALSE, header=TRUE)  health %>%    mutate(area_id=trunc(area_id)) %>%    arrange(area_id, pct) %>%    mutate(year=rep(c(\"2014\", \"2013\"), 26),          pct=pct/100) %>%    left_join(areas, \"area_id\") %>%    mutate(area_name=factor(area_name, levels=unique(area_name))) -> health  setNames(bind_cols(filter(health, year==2014), filter(health, year==2013))[,c(4,1,5)],          c(\"area_name\", \"pct_2014\", \"pct_2013\")) -> health  gg <- ggplot(health, aes(x=pct_2014, xend=pct_2013, y=area_name, group=area_name)) gg <- gg + geom_dumbbell(colour=\"#a3c4dc\", size=1.5, colour_xend=\"#0e668b\",                           dot_guide=TRUE, dot_guide_size=0.15) gg <- gg + scale_x_continuous(label=percent) gg <- gg + labs(x=NULL, y=NULL) gg <- gg + theme_bw() gg <- gg + theme(plot.background=element_rect(fill=\"#f7f7f7\")) gg <- gg + theme(panel.background=element_rect(fill=\"#f7f7f7\")) gg <- gg + theme(panel.grid.minor=element_blank()) gg <- gg + theme(panel.grid.major.y=element_blank()) gg <- gg + theme(panel.grid.major.x=element_line()) gg <- gg + theme(axis.ticks=element_blank()) gg <- gg + theme(legend.position=\"top\") gg <- gg + theme(panel.border=element_blank()) gg library(hrbrthemes)  df <- data.frame(trt=LETTERS[1:5], l=c(20, 40, 10, 30, 50), r=c(70, 50, 30, 60, 80))  ggplot(df, aes(y=trt, x=l, xend=r)) +    geom_dumbbell(size=3, color=\"#e3e2e1\",                  colour_x = \"#5b8124\", colour_xend = \"#bad744\",                 dot_guide=TRUE, dot_guide_size=0.25) +   labs(x=NULL, y=NULL, title=\"ggplot2 geom_dumbbell with dot guide\") +   theme_ipsum_rc(grid=\"X\") +   theme(panel.grid.major.x=element_line(size=0.05)) p <- ggplot(msleep, aes(bodywt, brainwt)) + geom_point()  # add identity scale minor ticks on y axis p + annotation_ticks(sides = 'l') ## Warning: Removed 27 rows containing missing values (geom_point). # add identity scale minor ticks on x,y axis p + annotation_ticks(sides = 'lb') ## Warning: Removed 27 rows containing missing values (geom_point). # log10 scale p1 <- p + scale_x_log10()  # add minor ticks on both scales p1 + annotation_ticks(sides = 'lb', scale = c('identity','log10')) ## Warning: Removed 27 rows containing missing values (geom_point). mtcars$name <- rownames(mtcars)  p <- ggplot(data = mtcars, aes(x=mpg,y=disp)) + geom_point()  p +    geom_spikelines(data = mtcars[mtcars$carb==4,],aes(colour = factor(gear)), linetype = 2) +    ggrepel::geom_label_repel(data = mtcars[mtcars$carb==4,],aes(label = name))"},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Extra Coordinate Systems, Geoms, Statistical Transformations, Scales\n    and Fonts for ggplot2","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"/reference/absoluteGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute grob — absoluteGrob","title":"Absolute grob — absoluteGrob","text":"grob fixed dimensions position.","code":""},{"path":"/reference/absoluteGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute grob — absoluteGrob","text":"","code":"absoluteGrob(grob, width = NULL, height = NULL, xmin = NULL,   ymin = NULL, vp = NULL)"},{"path":"/reference/absoluteGrob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Absolute grob — absoluteGrob","text":"still experimental","code":""},{"path":"/reference/annotate_textp.html","id":null,"dir":"Reference","previous_headings":"","what":"Text annotations in plot coordinate system — annotate_textp","title":"Text annotations in plot coordinate system — annotate_textp","text":"Annotates plot text. Compared annotate(\"text\",...), placement annotations specified plot coordinates (0 1) instead data coordinates.","code":""},{"path":"/reference/annotate_textp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text annotations in plot coordinate system — annotate_textp","text":"","code":"annotate_textp(label, x, y, facets = NULL, hjust = 0, vjust = 0,   color = \"black\", alpha = NA, family = theme_get()$text$family,   size = theme_get()$text$size, fontface = 1, lineheight = 1,   box_just = ifelse(c(x, y) < 0.5, 0, 1), margin = unit(size/2, \"pt\"))"},{"path":"/reference/annotate_textp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text annotations in plot coordinate system — annotate_textp","text":"label text annotation placed plot x, y positions individual annotations, plot coordinates (0..1) instead data coordinates! facets facet positions individual annotations hjust, vjust horizontal vertical justification text relative bounding box color, alpha, family, size, fontface, lineheight font properties alpha, family, size, fontface, lineheight standard aesthetic customizations box_just placement bounding box text relative x,y coordinates. Per default, box placed center plot. aware parts box outside visible region plot shown. margin margins bounding box","code":""},{"path":"/reference/annotate_textp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text annotations in plot coordinate system — annotate_textp","text":"","code":"p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() p <- p + geom_smooth(method = \"lm\", se = FALSE) p + annotate_textp(x = 0.9, y = 0.35, label=\"A relative linear\\nrelationship\", hjust=1, color=\"red\") #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"/reference/annotation_ticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotation: tick marks — annotation_ticks","title":"Annotation: tick marks — annotation_ticks","text":"annotation adds tick marks axis","code":""},{"path":"/reference/annotation_ticks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotation: tick marks — annotation_ticks","text":"","code":"annotation_ticks(sides = \"b\", scale = \"identity\", scaled = TRUE,   short = unit(0.1, \"cm\"), mid = unit(0.2, \"cm\"), long = unit(0.3,   \"cm\"), colour = \"black\", size = 0.5, linetype = 1, alpha = 1,   color = NULL, ticks_per_base = NULL, ...)"},{"path":"/reference/annotation_ticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotation: tick marks — annotation_ticks","text":"sides string controls sides plot log ticks appear . can set string containing \"trbl\", top, right, bottom, left. scale character, vector type scale attributed corresponding side, Default: 'identity' scaled data already log-scaled? TRUE (default) data already transformed log10() using scale_y_log10. FALSE using coord_trans(y = \"log10\"). short grid::unit() object specifying length short tick marks mid grid::unit() object specifying length middle tick marks. base 10, \"5\" ticks. long grid::unit() object specifying length long tick marks. base 10, \"1\" (\"10\") ticks. colour Colour tick marks. size Thickness tick marks, mm. linetype Linetype tick marks (solid, dashed, etc.) alpha transparency tick marks. color alias colour. ticks_per_base integer, number minor ticks pair major ticks, Default: NULL ... parameters passed layer","code":""},{"path":"/reference/annotation_ticks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annotation: tick marks — annotation_ticks","text":"scale length one replicated number sides given, length scale larger one must match number sides given. ticks_per_base set NULL function infers number ticks per base base scale - 1, example log scale base exp(1) log10 identity base 10. ticks_per_base given follows logic scale.","code":""},{"path":"/reference/annotation_ticks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Annotation: tick marks — annotation_ticks","text":"Jonathan Sidi","code":""},{"path":"/reference/annotation_ticks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotation: tick marks — annotation_ticks","text":"","code":"p <- ggplot(msleep, aes(bodywt, brainwt)) + geom_point()  # Default behavior  # add identity scale minor ticks on y axis p + annotation_ticks(sides = 'l') #> Warning: Removed 27 rows containing missing values (`geom_point()`).   # add identity scale minor ticks on x,y axis p + annotation_ticks(sides = 'lb') #> Warning: Removed 27 rows containing missing values (`geom_point()`).   # Control number of minor ticks of each side independently  # add identity scale minor ticks on x,y axis p + annotation_ticks(sides = 'lb', ticks_per_base = c(10,5)) #> Warning: Removed 27 rows containing missing values (`geom_point()`).   # log10 scale p1 <- p + scale_x_log10()  # add minor ticks on log10 scale p1 + annotation_ticks(sides = 'b', scale = 'log10') #> Warning: Removed 27 rows containing missing values (`geom_point()`).   # add minor ticks on both scales p1 + annotation_ticks(sides = 'lb', scale = c('identity','log10')) #> Warning: Removed 27 rows containing missing values (`geom_point()`).   # add minor ticks on both scales, but force x axis to be identity p1 + annotation_ticks(sides = 'lb', scale = 'identity') #> Warning: Removed 27 rows containing missing values (`geom_point()`).   # log scale p2 <- p + scale_x_continuous(trans = 'log')  # add minor ticks on log scale p2 + annotation_ticks(sides = 'b', scale = 'log') #> Warning: Removed 27 rows containing missing values (`geom_point()`).   # add minor ticks on both scales p2 + annotation_ticks(sides = 'lb', scale = c('identity','log')) #> Warning: Removed 27 rows containing missing values (`geom_point()`).   # add minor ticks on both scales, but force x axis to be identity p2 + annotation_ticks(sides = 'lb', scale = 'identity') #> Warning: Removed 27 rows containing missing values (`geom_point()`)."},{"path":"/reference/byte_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Bytes formatter: convert to byte measurement and display symbol. — byte_format","title":"Bytes formatter: convert to byte measurement and display symbol. — byte_format","text":"Bytes formatter: convert byte measurement display symbol.","code":""},{"path":"/reference/byte_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bytes formatter: convert to byte measurement and display symbol. — byte_format","text":"","code":"byte_format(symbol = \"auto\", units = \"binary\", only_highest = TRUE)  Kb(x)  Mb(x)  Gb(x)  bytes(x, symbol = \"auto\", units = c(\"binary\", \"si\"),   only_highest = FALSE)"},{"path":"/reference/byte_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bytes formatter: convert to byte measurement and display symbol. — byte_format","text":"symbol byte symbol use. \"auto\" symbol used determined maximum value x. Valid symbols \"b\", \"K\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\", along upper case equivalents \"iB\" equivalents. units unit base use, \"binary\" (1024 base) \"si\" (1000 base) ISI units. only_highest Whether use unit highest number number uses unit. x numeric vector format","code":""},{"path":"/reference/byte_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bytes formatter: convert to byte measurement and display symbol. — byte_format","text":"function three parameters, x, numeric vector   returns character vector, symbol single vector byte symbol(s) (e.g. \"Kb\") desired measurement units (traditional binary si ISI metric units).","code":""},{"path":"/reference/byte_format.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bytes formatter: convert to byte measurement and display symbol. — byte_format","text":"Units Information (Wikipedia) :   http://en.wikipedia.org/wiki/Units_of_information","code":""},{"path":"/reference/byte_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bytes formatter: convert to byte measurement and display symbol. — byte_format","text":"","code":"byte_format()(sample(3000000000, 10)) #>  [1] \"2.20 Gb\" \"2.70 Gb\" \"1.30 Gb\" \"1.40 Gb\" \"1.90 Gb\" \"0.30 Gb\" \"1.00 Gb\" #>  [8] \"1.00 Gb\" \"2.30 Gb\" \"0.30 Gb\" bytes(sample(3000000000, 10)) #>  [1] \"813.2 Mb\" \"1.3 Gb\"   \"237.5 Mb\" \"2.5 Gb\"   \"2.6 Gb\"   \"1.5 Gb\"   #>  [7] \"1.8 Gb\"   \"578.0 Mb\" \"836.7 Mb\" \"905.9 Mb\" Kb(sample(3000000000, 10)) #>  [1] \"292,721 Kb\"   \"2,053,616 Kb\" \"2,673,537 Kb\" \"654,630 Kb\"   \"2,042,004 Kb\" #>  [6] \"586,712 Kb\"   \"1,791,997 Kb\" \"2,585,409 Kb\" \"8,284 Kb\"     \"1,655,142 Kb\" Mb(sample(3000000000, 10)) #>  [1] \"478 Mb\"   \"895 Mb\"   \"2,629 Mb\" \"1,877 Mb\" \"2,684 Mb\" \"374 Mb\"   #>  [7] \"40 Mb\"    \"1,602 Mb\" \"835 Mb\"   \"2,272 Mb\" Gb(sample(3000000000, 10)) #>  [1] \"2.50 Gb\" \"2.50 Gb\" \"1.30 Gb\" \"2.80 Gb\" \"1.50 Gb\" \"0.50 Gb\" \"0.80 Gb\" #>  [8] \"0.40 Gb\" \"1.40 Gb\" \"1.60 Gb\""},{"path":"/reference/coord_proj.html","id":null,"dir":"Reference","previous_headings":"","what":"Similar to coord_map but uses the PROJ.4 library/package for projection\r\ntransformation — coord_proj","title":"Similar to coord_map but uses the PROJ.4 library/package for projection\r\ntransformation — coord_proj","text":"representation portion earth, approximately spherical, onto flat 2D plane requires projection. coord_proj , using proj4::project() function proj4 package.","code":""},{"path":"/reference/coord_proj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Similar to coord_map but uses the PROJ.4 library/package for projection\r\ntransformation — coord_proj","text":"","code":"coord_proj(proj = NULL, inverse = FALSE, degrees = TRUE,   ellps.default = \"sphere\", xlim = NULL, ylim = NULL)"},{"path":"/reference/coord_proj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Similar to coord_map but uses the PROJ.4 library/package for projection\r\ntransformation — coord_proj","text":"proj projection definition. left NULL default Robinson projection inverse TRUE inverse projection performed (cartographic projection lat/long), otherwise projects lat/long cartographic projection. degrees TRUE lat/long data assumed degrees, otherwise radians ellps.default default ellipsoid added datum ellipsoid parameter specified proj. Older versions PROJ.4 require datum (used sphere default), 4.5.0 higher always require datum ellipsoid. Set  NA datum added proj (e.g. specify ellipsoid directly). xlim manually specify x limits (degrees longitude) ylim manually specify y limits (degrees latitude)","code":""},{"path":"/reference/coord_proj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Similar to coord_map but uses the PROJ.4 library/package for projection\r\ntransformation — coord_proj","text":"sample output coord_proj() using Winkel-Tripel projection:","code":""},{"path":"/reference/coord_proj.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Similar to coord_map but uses the PROJ.4 library/package for projection\r\ntransformation — coord_proj","text":"recommended use geom_cartogram coordinate system inverse FALSE coord_proj makes fairly       large assumption coordinates transformed within       -180:180 (longitude) -90:90 (latitude). , truncates       longitude & latitude input fit within ranges. updates       new coord_ planned.","code":""},{"path":"/reference/coord_proj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Similar to coord_map but uses the PROJ.4 library/package for projection\r\ntransformation — coord_proj","text":"","code":"if (FALSE) { # World in Winkel-Tripel  # U.S.A. Albers-style usa <- world[world$region == \"USA\",] usa <- usa[!(usa$subregion %in% c(\"Alaska\", \"Hawaii\")),]  gg <- ggplot() gg <- gg + geom_cartogram(data=usa, map=usa,                     aes(x=long, y=lat, map_id=region)) gg <- gg + coord_proj(              paste0(\"+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96\",                     \" +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs\")) gg  # Showcase Greenland (properly) greenland <- world[world$region == \"Greenland\",]  gg <- ggplot() gg <- gg + geom_cartogram(data=greenland, map=greenland,                     aes(x=long, y=lat, map_id=region)) gg <- gg + coord_proj(              paste0(\"+proj=stere +lat_0=90 +lat_ts=70 +lon_0=-45 +k=1 +x_0=0\",                     \" +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\")) gg }"},{"path":"/reference/fortify.table.html","id":null,"dir":"Reference","previous_headings":"","what":"Fortify contingency tables — fortify.table","title":"Fortify contingency tables — fortify.table","text":"Fortify contingency tables","code":""},{"path":"/reference/fortify.table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fortify contingency tables — fortify.table","text":"","code":"# S3 method for table fortify(model, data, ...)"},{"path":"/reference/fortify.table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fortify contingency tables — fortify.table","text":"model contingency table data data (unused) ... (unused)","code":""},{"path":"/reference/geom_bkde.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a smooth density estimate. — geom_bkde","title":"Display a smooth density estimate. — geom_bkde","text":"kernel density estimate, useful displaying distribution variables underlying smoothness.","code":""},{"path":"/reference/geom_bkde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a smooth density estimate. — geom_bkde","text":"","code":"geom_bkde(mapping = NULL, data = NULL, stat = \"bkde\",   position = \"identity\", bandwidth = NULL, range.x = NULL,   na.rm = FALSE, show.legend = NA, inherit.aes = TRUE, ...)  stat_bkde(mapping = NULL, data = NULL, geom = \"area\",   position = \"stack\", kernel = \"normal\", canonical = FALSE,   bandwidth = NULL, gridsize = 410, range.x = NULL,   truncate = TRUE, na.rm = FALSE, show.legend = NA,   inherit.aes = TRUE, ...)"},{"path":"/reference/geom_bkde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a smooth density estimate. — geom_bkde","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. position Position adjustment, either string, result call position adjustment function. bandwidth kernel bandwidth smoothing parameter. see bkde details. NULL, computed likely yield optimal results. range.x vector containing minimum maximum values x compute estimate. see bkde details na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. geom, stat Use override default connection geom_bkde stat_bkde. kernel character string determines smoothing kernel. see bkde details canonical logical flag: TRUE, canonically scaled kernels used. see bkde details gridsize number equally spaced points estimate density. see bkde details. truncate logical flag: TRUE, data x values outside range specified range.x ignored. see bkde details","code":""},{"path":"/reference/geom_bkde.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display a smooth density estimate. — geom_bkde","text":"sample output geom_bkde():","code":""},{"path":"/reference/geom_bkde.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Display a smooth density estimate. — geom_bkde","text":"geom_bkde understands following aesthetics (required aesthetics bold): x y alpha color fill linetype size","code":""},{"path":"/reference/geom_bkde.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Display a smooth density estimate. — geom_bkde","text":"density density estimate count density * number points - useful stacked density      plots scaled density estimate, scaled maximum 1","code":""},{"path":[]},{"path":"/reference/geom_bkde.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a smooth density estimate. — geom_bkde","text":"","code":"data(geyser, package=\"MASS\")  ggplot(geyser, aes(x=duration)) +   stat_bkde(alpha=1/2) #> Bandwidth not specified. Using '0.14', via KernSmooth::dpik.   ggplot(geyser, aes(x=duration)) +   geom_bkde(alpha=1/2) #> Bandwidth not specified. Using '0.14', via KernSmooth::dpik. #> Warning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.   ggplot(geyser, aes(x=duration)) +  stat_bkde(bandwidth=0.25)   ggplot(geyser, aes(x=duration)) +   geom_bkde(bandwidth=0.25)"},{"path":"/reference/geom_bkde2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Contours from a 2d density estimate. — geom_bkde2d","title":"Contours from a 2d density estimate. — geom_bkde2d","text":"Perform 2D kernel density estimation using bkde2D display results contours. can useful dealing overplotting","code":""},{"path":"/reference/geom_bkde2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contours from a 2d density estimate. — geom_bkde2d","text":"","code":"geom_bkde2d(mapping = NULL, data = NULL, stat = \"bkde2d\",   position = \"identity\", bandwidth = NULL, range.x = NULL,   lineend = \"butt\", contour = TRUE, linejoin = \"round\",   linemitre = 1, na.rm = FALSE, show.legend = NA,   inherit.aes = TRUE, ...)  stat_bkde2d(mapping = NULL, data = NULL, geom = \"density2d\",   position = \"identity\", contour = TRUE, bandwidth = NULL,   grid_size = c(51, 51), range.x = NULL, truncate = TRUE,   na.rm = FALSE, show.legend = NA, inherit.aes = TRUE, ...)"},{"path":"/reference/geom_bkde2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contours from a 2d density estimate. — geom_bkde2d","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. bandwidth kernel bandwidth smoothing parameter. see bkde2D details. NULL, computed likely yield optimal results. see bkde2D details range.x list containing two vectors, vector contains minimum maximum values x compute estimate direction. see bkde2D details lineend Line end style (round, butt, square). contour TRUE, contour results 2d density estimation linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. geom default geom use stat grid_size vector containing number equally spaced points direction density estimated. see bkde2D details truncate logical flag: TRUE, data x values outside range specified range.x ignored. see bkde2D details","code":""},{"path":"/reference/geom_bkde2d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Contours from a 2d density estimate. — geom_bkde2d","text":"sample output geom_bkde2d():","code":""},{"path":"/reference/geom_bkde2d.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Contours from a 2d density estimate. — geom_bkde2d","text":"stat_contour","code":""},{"path":[]},{"path":"/reference/geom_bkde2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contours from a 2d density estimate. — geom_bkde2d","text":"","code":"m <- ggplot(faithful, aes(x = eruptions, y = waiting)) +        geom_point() +        xlim(0.5, 6) +        ylim(40, 110)  m + geom_bkde2d(bandwidth=c(0.5, 4)) #> Warning: Computation failed in `stat_bkde2d()` #> Caused by error in `contour_breaks()`: #> ! argument \"z.range\" is missing, with no default   m + stat_bkde2d(bandwidth=c(0.5, 4), aes(fill = ..level..), geom = \"polygon\") #> Warning: The dot-dot notation (`..level..`) was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(level)` instead. #> Warning: Computation failed in `stat_bkde2d()` #> Caused by error in `contour_breaks()`: #> ! argument \"z.range\" is missing, with no default   # If you map an aesthetic to a categorical variable, you will get a # set of contours for each value of that variable set.seed(4393) dsmall <- diamonds[sample(nrow(diamonds), 1000), ] d <- ggplot(dsmall, aes(x, y)) +        geom_bkde2d(bandwidth=c(0.5, 0.5), aes(colour = cut)) d #> Warning: Computation failed in `stat_bkde2d()` #> Caused by error in `contour_breaks()`: #> ! argument \"z.range\" is missing, with no default   # If we turn contouring off, we can use use geoms like tiles: d + stat_bkde2d(bandwidth=c(0.5, 0.5), geom = \"raster\",                 aes(fill = ..density..), contour = FALSE) #> Warning: Computation failed in `stat_bkde2d()` #> Caused by error in `contour_breaks()`: #> ! argument \"z.range\" is missing, with no default   # Or points: d + stat_bkde2d(bandwidth=c(0.5, 0.5), geom = \"point\",                 aes(size = ..density..),  contour = FALSE) #> Warning: Computation failed in `stat_bkde2d()` #> Caused by error in `contour_breaks()`: #> ! argument \"z.range\" is missing, with no default"},{"path":"/reference/geom_cartogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Map polygons layer enabling the display of show statistical information — geom_cartogram","title":"Map polygons layer enabling the display of show statistical information — geom_cartogram","text":"replicates old behaviour geom_map(), enabling specifying x y aesthetics.","code":""},{"path":"/reference/geom_cartogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map polygons layer enabling the display of show statistical information — geom_cartogram","text":"","code":"geom_cartogram(mapping = NULL, data = NULL, stat = \"identity\", ...,   map, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)"},{"path":"/reference/geom_cartogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map polygons layer enabling the display of show statistical information — geom_cartogram","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. stat statistical transformation use data layer, string. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. map Data frame contains map coordinates.  typically created using fortify spatial object. must contain columns x, long longitude, y, lat latitude region id. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_cartogram.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Map polygons layer enabling the display of show statistical information — geom_cartogram","text":"geom_cartogram understands following aesthetics (required aesthetics bold): map_id alpha colour fill group linetype size x y","code":""},{"path":"/reference/geom_cartogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map polygons layer enabling the display of show statistical information — geom_cartogram","text":"","code":"if (FALSE) { # When using geom_polygon, you will typically need two data frames: # one contains the coordinates of each polygon (positions),  and the # other the values associated with each polygon (values).  An id # variable links the two together  ids <- factor(c(\"1.1\", \"2.1\", \"1.2\", \"2.2\", \"1.3\", \"2.3\"))  values <- data.frame(   id = ids,   value = c(3, 3.1, 3.1, 3.2, 3.15, 3.5) )  positions <- data.frame(   id = rep(ids, each = 4),   x = c(2, 1, 1.1, 2.2, 1, 0, 0.3, 1.1, 2.2, 1.1, 1.2, 2.5, 1.1, 0.3,   0.5, 1.2, 2.5, 1.2, 1.3, 2.7, 1.2, 0.5, 0.6, 1.3),   y = c(-0.5, 0, 1, 0.5, 0, 0.5, 1.5, 1, 0.5, 1, 2.1, 1.7, 1, 1.5,   2.2, 2.1, 1.7, 2.1, 3.2, 2.8, 2.1, 2.2, 3.3, 3.2) )  ggplot() +   geom_cartogram(aes(x, y, map_id = id), map = positions, data=positions)  ggplot() +   geom_cartogram(aes(x, y, map_id = id), map = positions, data=positions) +   geom_cartogram(data=values, map=positions, aes(fill = value, map_id=id))  ggplot() +   geom_cartogram(aes(x, y, map_id = id), map = positions, data=positions) +   geom_cartogram(data=values, map=positions, aes(fill = value, map_id=id)) +   ylim(0, 3)  # Better example crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests) crimesm <- reshape2::melt(crimes, id = 1)  if (require(maps)) {    states_map <- map_data(\"state\")    ggplot() +     geom_cartogram(aes(long, lat, map_id = region), map = states_map, data=states_map) +     geom_cartogram(aes(fill = Murder, map_id = state), map=states_map, data=crimes)    last_plot() + coord_map(\"polyconic\")    ggplot() +     geom_cartogram(aes(long, lat, map_id=region), map = states_map, data=states_map) +     geom_cartogram(aes(fill = value, map_id=state), map = states_map, data=crimesm) +     coord_map(\"polyconic\") +     facet_wrap( ~ variable) } }"},{"path":"/reference/geom_dumbbell.html","id":null,"dir":"Reference","previous_headings":"","what":"Dumbbell charts — geom_dumbbell","title":"Dumbbell charts — geom_dumbbell","text":"dumbbell geom used create dumbbell charts.","code":""},{"path":"/reference/geom_dumbbell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dumbbell charts — geom_dumbbell","text":"","code":"geom_dumbbell(mapping = NULL, data = NULL, ..., colour_x = NULL,   size_x = NULL, colour_xend = NULL, size_xend = NULL,   dot_guide = FALSE, dot_guide_size = NULL, dot_guide_colour = NULL,   na.rm = FALSE, show.legend = NA, inherit.aes = TRUE,   position = \"identity\")"},{"path":"/reference/geom_dumbbell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dumbbell charts — geom_dumbbell","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. colour_x colour start point size_x size start point colour_xend colour end point size_xend size end point dot_guide TRUE, leading dotted line placed left-dumbbell point dot_guide_size, dot_guide_colour singe-value aesthetics dot_guide na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). position Position adjustment, either string, result call position adjustment function.","code":""},{"path":"/reference/geom_dumbbell.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dumbbell charts — geom_dumbbell","text":"Dumbbell dot plots — dot plots two series data — alternative clustered bar chart slope graph.","code":""},{"path":"/reference/geom_dumbbell.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Dumbbell charts — geom_dumbbell","text":"@section Aesthetics: geom_segment() understands following aesthetics (required aesthetics bold): x y xend yend alpha colour group linetype linewidth","code":""},{"path":"/reference/geom_dumbbell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dumbbell charts — geom_dumbbell","text":"","code":"library(ggplot2)  df <- data.frame(trt=LETTERS[1:5], l=c(20, 40, 10, 30, 50), r=c(70, 50, 30, 60, 80))  ggplot(df, aes(y=trt, x=l, xend=r)) +   geom_dumbbell(size=3, color=\"#e3e2e1\",                 colour_x = \"#5b8124\", colour_xend = \"#bad744\",                 dot_guide=TRUE, dot_guide_size=0.25) +   labs(x=NULL, y=NULL, title=\"ggplot2 geom_dumbbell with dot guide\") +   theme_minimal() +   theme(panel.grid.major.x=element_line(size=0.05)) #> Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0. #> ℹ Please use the `linewidth` argument instead. #> Warning: Using the `size` aesthietic with geom_segment was deprecated in ggplot2 3.4.0. #> ℹ Please use the `linewidth` aesthetic instead.   ## with vertical dodging df2 <- data.frame(trt = c(LETTERS[1:5], \"D\"),                  l = c(20, 40, 10, 30, 50, 40),                  r = c(70, 50, 30, 60, 80, 70))  ggplot(df2, aes(y=trt, x=l, xend=r)) +   geom_dumbbell(size=3, color=\"#e3e2e1\",                 colour_x = \"#5b8124\", colour_xend = \"#bad744\",                 dot_guide=TRUE, dot_guide_size=0.25,                 position=position_dodgev(height=0.4)) +   labs(x=NULL, y=NULL, title=\"ggplot2 geom_dumbbell with dot guide\") +   theme_minimal() +   theme(panel.grid.major.x=element_line(size=0.05))"},{"path":"/reference/geom_encircle.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically enclose points in a polygon — geom_encircle","title":"Automatically enclose points in a polygon — geom_encircle","text":"Automatically enclose points polygon","code":""},{"path":"/reference/geom_encircle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically enclose points in a polygon — geom_encircle","text":"","code":"geom_encircle(mapping = NULL, data = NULL, stat = \"identity\",   position = \"identity\", na.rm = FALSE, show.legend = NA,   inherit.aes = TRUE, ...)"},{"path":"/reference/geom_encircle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically enclose points in a polygon — geom_encircle","text":"mapping mapping data data stat stat position position na.rm na.rm show.legend show.legend inherit.aes inherit.aes ... dots","code":""},{"path":"/reference/geom_encircle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatically enclose points in a polygon — geom_encircle","text":"adds circle around specified points","code":""},{"path":"/reference/geom_encircle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automatically enclose points in a polygon — geom_encircle","text":"sample output geom_encircle():","code":""},{"path":"/reference/geom_encircle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automatically enclose points in a polygon — geom_encircle","text":"Ben Bolker","code":""},{"path":"/reference/geom_encircle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatically enclose points in a polygon — geom_encircle","text":"","code":"d <- data.frame(x=c(1,1,2),y=c(1,2,2)*100)  gg <- ggplot(d,aes(x,y)) gg <- gg + scale_x_continuous(expand=c(0.5,1)) gg <- gg + scale_y_continuous(expand=c(0.5,1))  gg + geom_encircle(s_shape=1, expand=0) + geom_point()   gg + geom_encircle(s_shape=1, expand=0.1, colour=\"red\") + geom_point()   gg + geom_encircle(s_shape=0.5, expand=0.1, colour=\"purple\") + geom_point()   gg + geom_encircle(data=subset(d, x==1), colour=\"blue\", spread=0.02) +   geom_point()   gg +geom_encircle(data=subset(d, x==2), colour=\"cyan\", spread=0.04) +   geom_point()   gg <- ggplot(mpg, aes(displ, hwy)) gg + geom_encircle(data=subset(mpg, hwy>40)) + geom_point()  gg + geom_encircle(aes(group=manufacturer)) + geom_point()  gg + geom_encircle(aes(group=manufacturer,fill=manufacturer),alpha=0.4)+        geom_point()  gg + geom_encircle(aes(group=manufacturer,colour=manufacturer))+        geom_point()   ss <- subset(mpg,hwy>31 & displ<2)  gg + geom_encircle(data=ss, colour=\"blue\", s_shape=0.9, expand=0.07) +   geom_point() + geom_point(data=ss, colour=\"blue\")"},{"path":"/reference/geom_horizon.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a time series as a horizon plot — geom_horizon","title":"Plot a time series as a horizon plot — geom_horizon","text":"horizon plot breaks Y dimension using colours. useful visualising y values spanning vast range / trying highlight outliers without losing context rest data. Horizon plots best viewed apsect ratio low vertical length.","code":""},{"path":"/reference/geom_horizon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a time series as a horizon plot — geom_horizon","text":"","code":"geom_horizon(mapping = NULL, data = NULL, show.legend = TRUE,   inherit.aes = TRUE, na.rm = TRUE, bandwidth = NULL, ...)  GeomHorizon  stat_horizon(mapping = NULL, data = NULL, geom = \"horizon\",   show.legend = TRUE, inherit.aes = TRUE, na.rm = TRUE,   bandwidth = NULL, ...)  StatHorizon"},{"path":"/reference/geom_horizon.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plot a time series as a horizon plot — geom_horizon","text":"object class GeomHorizon (inherits GeomArea, GeomRibbon, Geom, ggproto, gg) length 4.","code":""},{"path":"/reference/geom_horizon.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Plot a time series as a horizon plot — geom_horizon","text":"x, y, fill. fill defaults ..band.. band number current data fill area belongs .","code":""},{"path":"/reference/geom_horizon.html","id":"other-parameters","dir":"Reference","previous_headings":"","what":"Other parameters","title":"Plot a time series as a horizon plot — geom_horizon","text":"bandwidth, dictate span band.","code":""},{"path":"/reference/geom_lollipop.html","id":null,"dir":"Reference","previous_headings":"","what":"Lollipop charts — geom_lollipop","title":"Lollipop charts — geom_lollipop","text":"lollipop geom used create lollipop charts.","code":""},{"path":"/reference/geom_lollipop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lollipop charts — geom_lollipop","text":"","code":"geom_lollipop(mapping = NULL, data = NULL, ..., horizontal = FALSE,   point.colour = NULL, point.size = NULL, na.rm = FALSE,   show.legend = NA, inherit.aes = TRUE)"},{"path":"/reference/geom_lollipop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lollipop charts — geom_lollipop","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. horizontal horizontal FALSE (default), function draw lollipops X axis (.e. set xend x & yend 0). TRUE, wiill set yend y & xend 0). Make sure map x & y aesthetics accordingly. parameter helps avoid need coord_flip(). point.colour colour point point.size size point na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_lollipop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lollipop charts — geom_lollipop","text":"Lollipop charts creation Andy Cotgreave going back 2011. combination thin segment, starting dot top suitable alternative replacement bar charts. Use horizontal parameter abate need coord_flip() (see Arguments section details). sample output geom_lollipop():","code":""},{"path":"/reference/geom_lollipop.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Lollipop charts — geom_lollipop","text":"@section Aesthetics: geom_point() understands following aesthetics (required aesthetics bold): x y alpha colour fill group shape size stroke","code":""},{"path":"/reference/geom_lollipop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lollipop charts — geom_lollipop","text":"","code":"df <- data.frame(trt=LETTERS[1:10],                  value=seq(100, 10, by=-10))  ggplot(df, aes(trt, value)) + geom_lollipop()   ggplot(df, aes(value, trt)) + geom_lollipop(horizontal=TRUE)"},{"path":"/reference/geom_spikelines.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw spikelines on a plot — geom_spikelines","title":"Draw spikelines on a plot — geom_spikelines","text":"Segment reference lines originate point","code":""},{"path":"/reference/geom_spikelines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw spikelines on a plot — geom_spikelines","text":"","code":"geom_spikelines(mapping = NULL, data = NULL, stat = \"identity\",   position = \"identity\", ..., arrow = NULL, lineend = \"butt\",   linejoin = \"round\", na.rm = FALSE, show.legend = NA,   inherit.aes = TRUE)"},{"path":"/reference/geom_spikelines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw spikelines on a plot — geom_spikelines","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. arrow Arrow specification, created grid::arrow(). lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_spikelines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw spikelines on a plot — geom_spikelines","text":"Jonathan Sidi","code":""},{"path":"/reference/geom_spikelines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw spikelines on a plot — geom_spikelines","text":"","code":"mtcars$name <- rownames(mtcars)  p <- ggplot(data = mtcars, aes(x=mpg,y=disp)) + geom_point()  p + geom_spikelines(data = mtcars[mtcars$carb==4,],linetype = 2)   p + geom_spikelines(data = mtcars[mtcars$carb==4,],aes(colour = factor(gear)), linetype = 2)   if (FALSE) { require(ggrepel) p + geom_spikelines(data = mtcars[mtcars$carb==4,],aes(colour = factor(gear)), linetype = 2) + ggrepel::geom_label_repel(data = mtcars[mtcars$carb==4,],aes(label = name)) }"},{"path":"/reference/geom_stateface.html","id":null,"dir":"Reference","previous_headings":"","what":"Use ProPublica's StateFace font in ggplot2 plots — geom_stateface","title":"Use ProPublica's StateFace font in ggplot2 plots — geom_stateface","text":"label parameter can either 2-letter state abbreviation full state name. geom_stateface() take care translation StateFace font glyph characters.","code":""},{"path":"/reference/geom_stateface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use ProPublica's StateFace font in ggplot2 plots — geom_stateface","text":"","code":"geom_stateface(mapping = NULL, data = NULL, stat = \"identity\",   position = \"identity\", ..., parse = FALSE, nudge_x = 0,   nudge_y = 0, check_overlap = FALSE, na.rm = FALSE,   show.legend = NA, inherit.aes = TRUE)"},{"path":"/reference/geom_stateface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use ProPublica's StateFace font in ggplot2 plots — geom_stateface","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. parse TRUE, labels parsed expressions displayed described ?plotmath. nudge_x, nudge_y Horizontal vertical adjustment nudge l abels . Useful offsetting text points, particularly discrete scales. check_overlap TRUE, text overlaps previous text layer plotted. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_stateface.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use ProPublica's StateFace font in ggplot2 plots — geom_stateface","text":"package also take care loading StateFace font PDF devices, use -screen ggplot2 device, need install font system. ggalt ships copy StateFace TTF font. can run show_stateface() get filesystem location load font manually . sample output geom_stateface():","code":""},{"path":[]},{"path":"/reference/geom_stateface.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use ProPublica's StateFace font in ggplot2 plots — geom_stateface","text":"","code":"if (FALSE) { library(ggplot2) library(ggalt)  # Run show_stateface() to see the location of the TTF StateFace font # You need to install it for it to work  set.seed(1492) dat <- data.frame(state=state.abb,                   x=sample(100, 50),                   y=sample(100, 50),                   col=sample(c(\"#b2182b\", \"#2166ac\"), 50, replace=TRUE),                   sz=sample(6:15, 50, replace=TRUE),                   stringsAsFactors=FALSE) gg <- ggplot(dat, aes(x=x, y=y)) gg <- gg + geom_stateface(aes(label=state, color=col, size=sz)) gg <- gg + scale_color_identity() gg <- gg + scale_size_identity() gg }"},{"path":"/reference/geom_ubar.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform ","title":"Uniform ","text":"using geom_segment make \"bar\" charts, setting xend whatever x yend 0. bar widths remain constant without tricks granular control segment width. decided time make geom.","code":""},{"path":"/reference/geom_ubar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform ","text":"","code":"geom_ubar(mapping = NULL, data = NULL, stat = \"identity\",   position = \"identity\", ..., na.rm = FALSE, show.legend = NA,   inherit.aes = TRUE)"},{"path":"/reference/geom_ubar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform ","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_ubar.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Uniform ","text":"`geom_ubar`` understands following aesthetics (required aesthetics bold): x y alpha colour group linetype size","code":""},{"path":"/reference/geom_ubar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uniform ","text":"","code":"library(ggplot2)  data(economics) ggplot(economics, aes(date, uempmed)) +   geom_ubar()"},{"path":"/reference/geom_xspline.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect control points/observations with an X-spline — geom_xspline","title":"Connect control points/observations with an X-spline — geom_xspline","text":"Draw X-spline, curve drawn relative control points/observations. Patterned geom_line orders points x first computing splines.","code":""},{"path":"/reference/geom_xspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect control points/observations with an X-spline — geom_xspline","text":"","code":"geom_xspline(mapping = NULL, data = NULL, stat = \"xspline\",   position = \"identity\", na.rm = TRUE, show.legend = NA,   inherit.aes = TRUE, spline_shape = -0.25, open = TRUE,   rep_ends = TRUE, ...)  stat_xspline(mapping = NULL, data = NULL, geom = \"line\",   position = \"identity\", na.rm = TRUE, show.legend = NA,   inherit.aes = TRUE, spline_shape = -0.25, open = TRUE,   rep_ends = TRUE, ...)"},{"path":"/reference/geom_xspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect control points/observations with an X-spline — geom_xspline","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. position Position adjustment, either string, result call position adjustment function. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). spline_shape numeric vector values -1 1, control shape spline relative control points. open logical value indicating whether spline open closed shape. rep_ends open X-splines, logical value indicating whether first last control points replicated drawing curve. Ignored closed X-splines. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. geom, stat Use override default connection geom_xspline stat_xspline.","code":""},{"path":"/reference/geom_xspline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect control points/observations with an X-spline — geom_xspline","text":"sample output geom_xspline():  X-spline line drawn relative control points. control point, line may pass (interpolate) control point may approach (approximate) control point; behaviour determined shape parameter control point. shape parameter greater zero, spline approximates control points (similar cubic B-spline shape 1). shape parameter less zero, spline interpolates control points (similar Catmull-Rom spline shape -1). shape parameter 0, spline forms sharp corner control point. open X-splines, start end control points must shape 0 (non-zero values silently converted zero). open X-splines, default start end control points replicated curve drawn. curve drawn (interpolating approximating) second third set four control points, default behaviour ensures resulting curve starts first control point specified ends last control point. default behaviour can turned via repEnds argument.","code":""},{"path":"/reference/geom_xspline.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Connect control points/observations with an X-spline — geom_xspline","text":"geom_xspline understands following aesthetics (required aesthetics bold): x y alpha color linetype size","code":""},{"path":"/reference/geom_xspline.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Connect control points/observations with an X-spline — geom_xspline","text":"x y","code":""},{"path":"/reference/geom_xspline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Connect control points/observations with an X-spline — geom_xspline","text":"Blanc, C. Schlick, C. (1995), \"X-splines : Spline Model             Designed End User\", Proceedings SIGGRAPH 95,             pp. 377-386. http://dept-info.labri.fr/~schlick/DOC/sig1.html","code":""},{"path":[]},{"path":"/reference/geom_xspline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect control points/observations with an X-spline — geom_xspline","text":"","code":"set.seed(1492) dat <- data.frame(x=c(1:10, 1:10, 1:10),                   y=c(sample(15:30, 10), 2*sample(15:30, 10),                       3*sample(15:30, 10)),                   group=factor(c(rep(1, 10), rep(2, 10), rep(3, 10))) )  ggplot(dat, aes(x, y, group=group, color=group)) +   geom_point() +   geom_line()   ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point() +   geom_line() +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'   ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(size=0.5) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'   ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=-0.4, size=0.5) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'   ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=0.4, size=0.5) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'   ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=1, size=0.5) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'   ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=0, size=0.5) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'   ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=\"black\") +   geom_smooth(se=FALSE, linetype=\"dashed\", size=0.5) +   geom_xspline(spline_shape=-1, size=0.5) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":"/reference/geom_xspline2.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative implemenation for connecting  control points/observations\r\nwith an X-spline — geom_xspline2","title":"Alternative implemenation for connecting  control points/observations\r\nwith an X-spline — geom_xspline2","text":"Alternative implemenation connecting  control points/observations X-spline","code":""},{"path":"/reference/geom_xspline2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative implemenation for connecting  control points/observations\r\nwith an X-spline — geom_xspline2","text":"","code":"geom_xspline2(mapping = NULL, data = NULL, stat = \"identity\",   position = \"identity\", na.rm = FALSE, show.legend = NA,   inherit.aes = TRUE, ...)"},{"path":"/reference/geom_xspline2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alternative implemenation for connecting  control points/observations\r\nwith an X-spline — geom_xspline2","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. stat Use override default connection geom_xspline stat_xspline. position Position adjustment, either string, result call position adjustment function. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat.","code":""},{"path":"/reference/geom_xspline2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alternative implemenation for connecting  control points/observations\r\nwith an X-spline — geom_xspline2","text":"creates spline curve","code":""},{"path":[]},{"path":"/reference/geom_xspline2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Alternative implemenation for connecting  control points/observations\r\nwith an X-spline — geom_xspline2","text":"Ben Bolker","code":""},{"path":"/reference/ggalt-ggproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Geom Proto — CoordProj","title":"Geom Proto — CoordProj","text":"Geom Proto Geom Proto Geom Proto Geom Proto Geom Proto","code":""},{"path":"/reference/ggalt-ggproto.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Geom Proto — CoordProj","text":"https://groups.google.com/forum/?fromgroups=#!topic/ggplot2/9cFWHaH1CPs","code":""},{"path":"/reference/ggalt.html","id":null,"dir":"Reference","previous_headings":"","what":"Extra Geoms, Stats, Coords, Scales & Fonts for 'ggplot2' — ggalt","title":"Extra Geoms, Stats, Coords, Scales & Fonts for 'ggplot2' — ggalt","text":"package containing additional geoms, coords, stats, scales & fonts ggplot2 2.0+","code":""},{"path":"/reference/ggalt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extra Geoms, Stats, Coords, Scales & Fonts for 'ggplot2' — ggalt","text":"Bob Rudis (@hrbrmstr)","code":""},{"path":"/reference/ggplot2-ggproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Base ggproto classes for ggplot2 — GeomTicks","title":"Base ggproto classes for ggplot2 — GeomTicks","text":"creating new geom, stat, position, scale another package, need extend ggplot2::Geom, ggplot2::Stat, ggplot2::Position, ggplot2::Scale.","code":""},{"path":[]},{"path":"/reference/load_stateface.html","id":null,"dir":"Reference","previous_headings":"","what":"Load stateface font — load_stateface","title":"Load stateface font — load_stateface","text":"Makes ProPublica StateFace font available PDF, PostScript, et. al. devices.","code":""},{"path":"/reference/load_stateface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load stateface font — load_stateface","text":"","code":"load_stateface()"},{"path":[]},{"path":"/reference/plotly_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotly helpers — plotly_helpers","title":"Plotly helpers — plotly_helpers","text":"Helper functions make easier automatically create plotly charts","code":""},{"path":"/reference/plotly_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotly helpers — plotly_helpers","text":"","code":"to_basic.GeomXspline(data, prestats_data, layout, params, p, ...)  to_basic.GeomBkde2d(data, prestats_data, layout, params, p, ...)  to_basic.GeomStateface(data, prestats_data, layout, params, p, ...)"},{"path":"/reference/plotly_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotly helpers — plotly_helpers","text":"data, prestats_data, layout, params, p, ... plotly interface parameters","code":""},{"path":"/reference/position-dodgev.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertically dodge position — position_dodgev","title":"Vertically dodge position — position_dodgev","text":"Vertically dodge position","code":""},{"path":"/reference/position-dodgev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertically dodge position — position_dodgev","text":"","code":"position_dodgev(height = NULL)"},{"path":"/reference/position-dodgev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertically dodge position — position_dodgev","text":"height numeric, height vertical dodge, Default: NULL","code":""},{"path":"/reference/position-dodgev.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Vertically dodge position — position_dodgev","text":"position-dodgev(): unmodified lionel-/ggstance/R/position-dodgev.R 73f521384ae8ea277db5f7d5a2854004aa18f947","code":""},{"path":"/reference/position-dodgev.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vertically dodge position — position_dodgev","text":"@ggstance authors","code":""},{"path":"/reference/position-dodgev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vertically dodge position — position_dodgev","text":"","code":"if(interactive()){  dat <- data.frame(   trt = c(LETTERS[1:5], \"D\"),   l = c(20, 40, 10, 30, 50, 40),   r = c(70, 50, 30, 60, 80, 70) )  ggplot(dat, aes(y=trt, x=l, xend=r)) +  geom_dumbbell(size=3, color=\"#e3e2e1\",                colour_x = \"#5b8124\", colour_xend = \"#bad744\",                dot_guide=TRUE, dot_guide_size=0.25,                position=position_dodgev(height=0.8)) +  labs(x=NULL, y=NULL, title=\"ggplot2 geom_dumbbell with dot guide\") +  theme_minimal() +  theme(panel.grid.major.x=element_line(size=0.05))   }"},{"path":"/reference/show_stateface.html","id":null,"dir":"Reference","previous_headings":"","what":"Show location of StateFace font — show_stateface","title":"Show location of StateFace font — show_stateface","text":"Displays path StateFace font. font work -screen plot device ggplot2, need install font system","code":""},{"path":"/reference/show_stateface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show location of StateFace font — show_stateface","text":"","code":"show_stateface()"},{"path":[]},{"path":"/reference/stat_ash.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and display a univariate averaged shifted histogram (polynomial kernel) — stat_ash","title":"Compute and display a univariate averaged shifted histogram (polynomial kernel) — stat_ash","text":"See bin1 & ash1 information.","code":""},{"path":"/reference/stat_ash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and display a univariate averaged shifted histogram (polynomial kernel) — stat_ash","text":"","code":"stat_ash(mapping = NULL, data = NULL, geom = \"area\",   position = \"stack\", ab = NULL, nbin = 50, m = 5, kopt = c(2,   2), na.rm = FALSE, show.legend = NA, inherit.aes = TRUE, ...)"},{"path":"/reference/stat_ash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and display a univariate averaged shifted histogram (polynomial kernel) — stat_ash","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. geom Use override default Geom position Position adjustment, either string, result call position adjustment function. ab half-open interval bins [,b). value specified, range x stretched 5% end used interval. nbin number bins desired. Default 50. m integer smoothing parameter; Default 5. kopt vector length 2 specifying kernel, proportional ( 1 - abs(/m)^kopt(1) )^kopt(2); (2,2)=biweight (default);  (0,0)=uniform; (1,0)=triangle; (2,1)=Epanechnikov; (2,3)=triweight. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat.","code":""},{"path":"/reference/stat_ash.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute and display a univariate averaged shifted histogram (polynomial kernel) — stat_ash","text":"sample output stat_ash():","code":""},{"path":"/reference/stat_ash.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Compute and display a univariate averaged shifted histogram (polynomial kernel) — stat_ash","text":"geom_ash understands following aesthetics (required aesthetics bold): x alpha color fill linetype size","code":""},{"path":"/reference/stat_ash.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Compute and display a univariate averaged shifted histogram (polynomial kernel) — stat_ash","text":"density ash density estimate","code":""},{"path":"/reference/stat_ash.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute and display a univariate averaged shifted histogram (polynomial kernel) — stat_ash","text":"David Scott (1992), \"Multivariate Density Estimation,\"             John Wiley, (chapter 5 particular).             B. W. Silverman (1986), \"Density Estimation Statistics             Data Analysis,\" Chapman & Hall.","code":""},{"path":"/reference/stat_ash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and display a univariate averaged shifted histogram (polynomial kernel) — stat_ash","text":"","code":"# compare library(gridExtra) #> Warning: package 'gridExtra' was built under R version 4.2.2 set.seed(1492) dat <- data.frame(x=rnorm(100)) grid.arrange(ggplot(dat, aes(x)) + stat_ash(),              ggplot(dat, aes(x)) + stat_bkde(),              ggplot(dat, aes(x)) + stat_density(),              nrow=3) #> Estimate nonzero outside interval ab. #> Bandwidth not specified. Using '0.43', via KernSmooth::dpik.   cols <- RColorBrewer::brewer.pal(3, \"Dark2\") ggplot(dat, aes(x)) +   stat_ash(alpha=1/2, fill=cols[3]) +   stat_bkde(alpha=1/2, fill=cols[2]) +   stat_density(alpha=1/2, fill=cols[1]) +   geom_rug() +   labs(x=NULL, y=\"density/estimate\") +   scale_x_continuous(expand=c(0,0)) +   theme_bw() +   theme(panel.grid=element_blank()) +   theme(panel.border=element_blank()) #> Estimate nonzero outside interval ab. #> Bandwidth not specified. Using '0.43', via KernSmooth::dpik."},{"path":"/reference/stat_stepribbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Step ribbon statistic — stat_stepribbon","title":"Step ribbon statistic — stat_stepribbon","text":"Provides stairstep values ribbon plots","code":""},{"path":"/reference/stat_stepribbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step ribbon statistic — stat_stepribbon","text":"","code":"stat_stepribbon(mapping = NULL, data = NULL, geom = \"ribbon\",   position = \"identity\", na.rm = FALSE, show.legend = NA,   inherit.aes = TRUE, direction = \"hv\", ...)"},{"path":"/reference/stat_stepribbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step ribbon statistic — stat_stepribbon","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. geom geom use; defaults \"ribbon\" position Position adjustment, either string, result call position adjustment function. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). direction hv horizontal-veritcal steps, vh vertical-horizontal steps ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat.","code":""},{"path":"/reference/stat_stepribbon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Step ribbon statistic — stat_stepribbon","text":"https://groups.google.com/forum/?fromgroups=#!topic/ggplot2/9cFWHaH1CPs","code":""},{"path":"/reference/stat_stepribbon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step ribbon statistic — stat_stepribbon","text":"","code":"x <- 1:10 df <- data.frame(x=x, y=x+10, ymin=x+7, ymax=x+12)  gg <- ggplot(df, aes(x, y)) gg <- gg + geom_ribbon(aes(ymin=ymin, ymax=ymax),                        stat=\"stepribbon\", fill=\"#b2b2b2\") gg <- gg + geom_step(color=\"#2b2b2b\") gg   gg <- ggplot(df, aes(x, y)) gg <- gg + geom_ribbon(aes(ymin=ymin, ymax=ymax),                        stat=\"stepribbon\", fill=\"#b2b2b2\",                        direction=\"hv\") gg <- gg + geom_step(color=\"#2b2b2b\") gg"}]
